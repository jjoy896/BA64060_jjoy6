library(ISLR)
library(caret)
Carseats
n(Carseats)
dim(Carseats)
?createDataPartition
temp_index = createDataPartition(Carseats$Sales, p = 0.75, list = FALSE)
Temp = Carseats[temp_index,]
Test = Carseats[-temp_index,]
Train_Index = createDataPartition(Temp$Sales, p = 0.66, list = FALSE)
Train_Data = Temp[Train_Index,]
Validation = Temp[-Train_Index,]
summary(Train_Data$Sales)
summary(Validation$Sales)
summary(Test$Sales)
unique(Train_Data)
?unique
duplicated(Train_Data)
duplicated(Test)
dublicated(Train_Data)
duplicated(Test)
duplicated(Train_Data)
duplicated(Validation)
all_data = rbind(Test, Train_Data, Validation)
duplicated(all_data)
?duplicated
anyDuplicated(Test)
anyduplicated(Test)
anyDuplicated(Test)
anyDuplicated(Train_Data)
anyDuplicated(Validation)
all_data = rbind(Test, Train_Data, Validation)
anDduplicated(all_data)
anyDuplicated(Test)
anyDuplicated(Train_Data)
anyDuplicated(Validation)
all_data = rbind(Test, Train_Data, Validation)
anyDuplicated(all_data)
#load ISLR which has the Carseats data set and the caret package
library(ISLR)
library(caret)
#Find out how many observations are in Carseats before splitting
dim(Carseats)
#Create temp_index which will be used to select ~75% or ~300 observations to later create Temp data frame.The selection is stratified by Sales (as in the module 3 example)
temp_index = createDataPartition(Carseats$Sales, p = 0.75, list = FALSE)
#Creation of the Temp Data table which contains ~300 observations to later be split into two data sets
Temp = Carseats[temp_index,]
#Creation of the Test data set which has ~25% of all the data or ~100 observations
Test = Carseats[-temp_index,]
#Create Train_Index which will be used to select ~66% or ~200 observations to later create Train_Data
Train_Index = createDataPartition(Temp$Sales, p = 0.66, list = FALSE)
#Creation of Train_Data set which will have ~200 observations from the original data set
Train_Data = Temp[Train_Index,]
#Creation of Validation_Data set which will have ~100 observations form the original data set
Validation_Data = Temp[-Train_Index,]
#Summary of Train_Data Sales variable
summary(Train_Data$Sales)
#Summary of Validation_Data Sales variable
summary(Validation_Data$Sales)
#Summary of Test data Sales variable
summary(Test$Sales)
#Check for duplicate rows in Test
anyDuplicated(Test)
#Check for duplicate rows in Train_Data
anyDuplicated(Train_Data)
#Check for duplicate rows in Validation_Data
anyDuplicated(Validation_Data)
#Combine all data sets back into one set
all_data = rbind(Test, Train_Data, Validation)
#Check for duplicate rows between all data sets
anyDuplicated(all_data)
#load ISLR which has the Carseats data set and the caret package
library(ISLR)
library(caret)
#Find out how many observations are in Carseats before splitting
dim(Carseats)
#Create temp_index which will be used to select ~75% or ~300 observations to later create Temp data frame.The selection is stratified by Sales (as in the module 3 example)
temp_index = createDataPartition(Carseats$Sales, p = 0.75, list = FALSE)
#Creation of the Temp Data table which contains ~300 observations to later be split into two data sets
Temp = Carseats[temp_index,]
#Creation of the Test data set which has ~25% of all the data or ~100 observations
Test = Carseats[-temp_index,]
#Create Train_Index which will be used to select ~66% or ~200 observations to later create Train_Data
Train_Index = createDataPartition(Temp$Sales, p = 0.66, list = FALSE)
#Creation of Train_Data set which will have ~200 observations from the original data set
Train_Data = Temp[Train_Index,]
#Creation of Validation_Data set which will have ~100 observations form the original data set
Validation_Data = Temp[-Train_Index,]
#Summary of Train_Data Sales variable
summary(Train_Data$Sales)
#Summary of Validation_Data Sales variable
summary(Validation_Data$Sales)
#Summary of Test data Sales variable
summary(Test$Sales)
#Check for duplicate rows in Test
anyDuplicated(Test)
#Check for duplicate rows in Train_Data
anyDuplicated(Train_Data)
#Check for duplicate rows in Validation_Data
anyDuplicated(Validation_Data)
#Combine all data sets back into one set
all_data = rbind(Test, Train_Data, Validation)
#Check for duplicate rows between all data sets
anyDuplicated(all_data)
#load ISLR which has the Carseats data set and the caret package
library(ISLR)
library(caret)
#Find out how many observations are in Carseats before splitting
dim(Carseats)
#Create temp_index which will be used to select ~75% or ~300 observations to later create Temp data frame.The selection is stratified by Sales (as in the module 3 example)
temp_index = createDataPartition(Carseats$Sales, p = 0.75, list = FALSE)
#Creation of the Temp Data table which contains ~300 observations to later be split into two data sets
Temp = Carseats[temp_index,]
#Creation of the Test data set which has ~25% of all the data or ~100 observations
Test = Carseats[-temp_index,]
#Create Train_Index which will be used to select ~66% or ~200 observations to later create Train_Data
Train_Index = createDataPartition(Temp$Sales, p = 0.66, list = FALSE)
#Creation of Train_Data set which will have ~200 observations from the original data set
Train_Data = Temp[Train_Index,]
#Creation of Validation_Data set which will have ~100 observations form the original data set
Validation_Data = Temp[-Train_Index,]
#Summary of Train_Data Sales variable
summary(Train_Data$Sales)
#Summary of Validation_Data Sales variable
summary(Validation_Data$Sales)
#Summary of Test data Sales variable
summary(Test$Sales)
#Check for duplicate rows in Test
anyDuplicated(Test)
#Check for duplicate rows in Train_Data
anyDuplicated(Train_Data)
#Check for duplicate rows in Validation_Data
anyDuplicated(Validation_Data)
#Combine all data sets back into one set
all_data = rbind(Test, Train_Data, Validation)
#load ISLR which has the Carseats data set and the caret package
library(ISLR)
library(caret)
#Find out how many observations are in Carseats before splitting
dim(Carseats)
#Create temp_index which will be used to select ~75% or ~300 observations to later create Temp data frame.The selection is stratified by Sales (as in the module 3 example)
temp_index = createDataPartition(Carseats$Sales, p = 0.75, list = FALSE)
#Creation of the Temp Data table which contains ~300 observations to later be split into two data sets
Temp = Carseats[temp_index,]
#Creation of the Test data set which has ~25% of all the data or ~100 observations
Test = Carseats[-temp_index,]
#Create Train_Index which will be used to select ~66% or ~200 observations to later create Train_Data
Train_Index = createDataPartition(Temp$Sales, p = 0.66, list = FALSE)
#Creation of Train_Data set which will have ~200 observations from the original data set
Train_Data = Temp[Train_Index,]
#Creation of Validation_Data set which will have ~100 observations form the original data set
Validation_Data = Temp[-Train_Index,]
#Summary of Train_Data Sales variable
summary(Train_Data$Sales)
#Summary of Validation_Data Sales variable
summary(Validation_Data$Sales)
#Summary of Test data Sales variable
summary(Test$Sales)
#Check for duplicate rows in Test
anyDuplicated(Test)
#Check for duplicate rows in Train_Data
anyDuplicated(Train_Data)
#Check for duplicate rows in Validation_Data
anyDuplicated(Validation_Data)
#Combine all data sets back into one set
all_data = rbind(Test, Train_Data, Validation_Data)
#Check for duplicate rows between all data sets
anyDuplicated(all_data)
#load ISLR which has the Carseats data set and the caret package
library(ISLR)
library(caret)
#Find out how many observations are in Carseats before splitting
dim(Carseats)
#Create temp_index which will be used to select ~75% or ~300 observations to later create Temp data frame.The selection is stratified by Sales (as in the module 3 example)
temp_index = createDataPartition(Carseats$Sales, p = 0.75, list = FALSE)
#Creation of the Temp Data table which contains ~300 observations to later be split into two data sets
Temp = Carseats[temp_index,]
#Creation of the Test data set which has ~25% of all the data or ~100 observations
Test = Carseats[-temp_index,]
#Create Train_Index which will be used to select ~66% or ~200 observations to later create Train_Data
Train_Index = createDataPartition(Temp$Sales, p = 0.66, list = FALSE)
#Creation of Train_Data set which will have ~200 observations from the original data set
Train_Data = Temp[Train_Index,]
#Creation of Validation_Data set which will have ~100 observations form the original data set
Validation_Data = Temp[-Train_Index,]
#Summary of Train_Data Sales variable
summary(Train_Data$Sales)
#Summary of Validation_Data Sales variable
summary(Validation_Data$Sales)
#Summary of Test data Sales variable
summary(Test$Sales)
#Check for duplicate rows in Test
anyDuplicated(Test)
#Check for duplicate rows in Train_Data
anyDuplicated(Train_Data)
#Check for duplicate rows in Validation_Data
anyDuplicated(Validation_Data)
#Combine all data sets back into one set
all_data = rbind(Test, Train_Data, Validation_Data)
#Check for duplicate rows between all data sets
anyDuplicated(all_data)
#load ISLR which has the Carseats data set and the caret package
library(ISLR)
library(caret)
#Find out how many observations are in Carseats before splitting
dim(Carseats)
#Create temp_index which will be used to select ~75% or ~300 observations to later create Temp data frame.The selection is stratified by Sales (as in the module 3 example)
temp_index = createDataPartition(Carseats$Sales, p = 0.75, list = FALSE)
#Creation of the Temp Data table which contains ~300 observations to later be split into two data sets
Temp = Carseats[temp_index,]
#Creation of the Test data set which has ~25% of all the data or ~100 observations
Test = Carseats[-temp_index,]
#Create Train_Index which will be used to select ~66% or ~200 observations to later create Train_Data
Train_Index = createDataPartition(Temp$Sales, p = 0.66, list = FALSE)
#Creation of Train_Data set which will have ~200 observations from the original data set
Train_Data = Temp[Train_Index,]
#Creation of Validation_Data set which will have ~100 observations form the original data set
Validation_Data = Temp[-Train_Index,]
#Summary of Train_Data Sales variable
summary(Train_Data$Sales)
#Summary of Validation_Data Sales variable
summary(Validation_Data$Sales)
#Summary of Test data Sales variable
summary(Test$Sales)
#Check for duplicate rows in Test
anyDuplicated(Test)
#Check for duplicate rows in Train_Data
anyDuplicated(Train_Data)
#Check for duplicate rows in Validation_Data
anyDuplicated(Validation_Data)
#Combine all data sets back into one set
all_data = rbind(Test, Train_Data, Validation_Data)
#Check for duplicate rows between all data sets
anyDuplicated(all_data)
