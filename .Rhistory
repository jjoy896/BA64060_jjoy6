heart_Data = read.csv("C:\\Heart_disease.csv")
#Set Seed for consistency
set.seed(123)
#Creating Dummy variable for Target Yes if MAX HeartRate
#greater than 170 else NO
for(i in 1:length(heart_Data)){
heart_Data$Target[i] = ifelse(heart_Data$MAX_HeartRate[i] > 170, "YES", "NO")
}
#Creating Dummy variable for BP_New if Blood_Pressure is greater
#than 120 else NO
for(i in 1:length(heart_Data)){
heart_Data$BP_New[i] = ifelse(heart_Data$Blood_Pressure[i] > 120, "YES", "NO")
}
#call Packages
library(naivebayes)
library(caret)
library(pivottabler)
library(gmodels)
#Import Data
heart_Data = read.csv("C:\\Users\\Urza\\OneDrive\\BA 64060 Fundementals of Machine Learning\\Module 5\\Assignment 4\\heart_disease.csv")
#Set Seed for consistency
set.seed(123)
#Creating Dummy variable for Target Yes if MAX HeartRate
#greater than 170 else NO
for(i in 1:length(heart_Data)){
heart_Data$Target[i] = ifelse(heart_Data$MAX_HeartRate[i] > 170, "YES", "NO")
}
#Creating Dummy variable for BP_New if Blood_Pressure is greater
#than 120 else NO
for(i in 1:length(heart_Data)){
heart_Data$BP_New[i] = ifelse(heart_Data$Blood_Pressure[i] > 120, "YES", "NO")
}
#Created a table to compare the target for heart disease with if they had
#chest pain
#Target_table = table(heart_Data$Target, heart_Data$chest_pain_type,
#  dnn = c("Heart Disease", "Chest Pain"))
Target_table <- table(Heart_disease$Target) Target_table
#Created a table to compare the target for heart disease with if they had
#chest pain
#Target_table = table(heart_Data$Target, heart_Data$chest_pain_type,
#  dnn = c("Heart Disease", "Chest Pain"))
Target_table <- table(heart_Data$Target) Target_table
View(heart_Data)
#Created a table to compare the target for heart disease with if they had
#chest pain
#Target_table = table(heart_Data$Target, heart_Data$chest_pain_type,
#  dnn = c("Heart Disease", "Chest Pain"))
Target_table <- table(heart_Data$Target)
#Target_tableProbability_No <- Target_table["No"] / sum(Target_table)
#Created the table to display probabilities instead of just frequency count
#prop.table(Target_table)
#Created a table to compare the target for heart disease with if they had
#chest pain
#Target_table = table(heart_Data$Target, heart_Data$chest_pain_type,
#  dnn = c("Heart Disease", "Chest Pain"))
Target_table <- table(heart_Data$Target)
#Target_table
Probability_No <- Target_table["No"] / sum(Target_table)
#Created the table to display probabilities instead of just frequency count
#prop.table(Target_table)
#Created a table to compare the target for heart disease with if they had
#chest pain
#Target_table = table(heart_Data$Target, heart_Data$chest_pain_type,
#  dnn = c("Heart Disease", "Chest Pain"))
Target_table <- table(heart_Data$Target)
Target_table
Probability_No <- Target_table["No"] / sum(Target_table)
#Created the table to display probabilities instead of just frequency count
#prop.table(Target_table)
#Created a table to compare the target for heart disease with if they had
#chest pain
#Target_table = table(heart_Data$Target, heart_Data$chest_pain_type,
#  dnn = c("Heart Disease", "Chest Pain"))
Target_table <- table(heart_Data$Target)
Target_table
Probability_No <- Target_table["No"] / sum(Target_table)
Probability_No
#Created the table to display probabilities instead of just frequency count
#prop.table(Target_table)
#Created a table to compare the target for heart disease with if they had
#chest pain
#Target_table = table(heart_Data$Target, heart_Data$chest_pain_type,
#  dnn = c("Heart Disease", "Chest Pain"))
Target_table <- table(heart_Data$Target)
Target_table
Probability_No <- Target_table["NO"] / sum(Target_table)
Probability_No
#Created the table to display probabilities instead of just frequency count
#prop.table(Target_table)
#Create a new dataframe with the first 30 entries which only includes the
#features Target, BP_New, and chest_pain_type
heart_data30 = heart_Data[1:30, c("Target", "BP_New", "chest_pain_type")]
#Creation of piviot table using all three variables
pivot1 = ftable(heart_data30)
pivot1
#Creation of each probability
P_YES_YES_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES"
& chest_pain_type == 1)) / nrow(heart_data30)
P_YES_NO_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" &
chest_pain_type == 0)) / nrow(heart_data30)
P_YES_NO_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" &
chest_pain_type == 1)) / nrow(heart_data30)
P_YES_YES_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" &
chest_pain_type == 0)) / nrow(heart_data30)
P_YES_1 = nrow(subset(heart_data30, BP_New == "YES" &
chest_pain_type == 1)) / nrow(heart_data30)
P_NO_0 = nrow(subset(heart_data30, BP_New == "NO" &
chest_pain_type == 0)) / nrow(heart_data30)
P_NO_1 = nrow(subset(heart_data30, BP_New == "NO" &
chest_pain_type == 1)) / nrow(heart_data30)
P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" &
chest_pain_type == 0)) / nrow(heart_data30)
#Creation of the variables that have the conditional probabilities
#with the outcome being yes for target.
P11 = P_YES_YES_0 / P_YES_0
P2 = P_YES_YES_1 / P_YES_1
P3 = P_YES_NO_0 / P_NO_0
P4 = P_YES_NO_1 / P_NO_1
print(paste("The conditional probability of having heart disease with high BP and No chest Pain", P11))
print(paste("The conditional probability of having heart disease with high BP and chest Pain", P2))
print(paste("The conditional probability of having heart disease withregular BP and No chest Pain", P3))
print(paste("The conditional probability of having heart disease with high BP and chest Pain", P4))
Object1 <- ftable(Heart_data30)
#Create a new dataframe with the first 30 entries which only includes the
#features Target, BP_New, and chest_pain_type
heart_data30 = heart_Data[1:30, c("Target", "BP_New", "chest_pain_type")]
#Creation of piviot table using all three variables
pivot1 = ftable(heart_data30)
pivot1
#Creation of each probability
P_YES_YES_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES"
& chest_pain_type == 1)) / nrow(heart_data30)
P_YES_NO_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" &
chest_pain_type == 0)) / nrow(heart_data30)
P_YES_NO_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" &
chest_pain_type == 1)) / nrow(heart_data30)
P_YES_YES_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" &
chest_pain_type == 0)) / nrow(heart_data30)
P_YES_1 = nrow(subset(heart_data30, BP_New == "YES" &
chest_pain_type == 1)) / nrow(heart_data30)
P_NO_0 = nrow(subset(heart_data30, BP_New == "NO" &
chest_pain_type == 0)) / nrow(heart_data30)
P_NO_1 = nrow(subset(heart_data30, BP_New == "NO" &
chest_pain_type == 1)) / nrow(heart_data30)
P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" &
chest_pain_type == 0)) / nrow(heart_data30)
#Creation of the variables that have the conditional probabilities
#with the outcome being yes for target.
P11 = P_YES_YES_0 / P_YES_0
P2 = P_YES_YES_1 / P_YES_1
P3 = P_YES_NO_0 / P_NO_0
P4 = P_YES_NO_1 / P_NO_1
print(paste("The conditional probability of having heart disease with high BP and No chest Pain", P11))
print(paste("The conditional probability of having heart disease with high BP and chest Pain", P2))
print(paste("The conditional probability of having heart disease withregular BP and No chest Pain", P3))
print(paste("The conditional probability of having heart disease with high BP and chest Pain", P4))
Object1 <- ftable(heart_data30)
Object2 <- ftable(heart_data30[,-1])
P1 = Object1[3,1] / Object2[1,1] # Target=yes, BP_New=No & chest_pain_type=0
P!
P1
Object2
#Create a new dataframe with the first 30 entries which only includes the
#features Target, BP_New, and chest_pain_type
heart_data30 = heart_Data[1:30, c("Target", "BP_New", "chest_pain_type")]
#Creation of piviot table using all three variables
pivot1 = ftable(heart_data30)
pivot1
#Creation of each probability
P_YES_YES_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES"
& chest_pain_type == 1)) / nrow(heart_data30)
P_YES_NO_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" &
chest_pain_type == 0)) / nrow(heart_data30)
P_YES_NO_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" &
chest_pain_type == 1)) / nrow(heart_data30)
P_YES_YES_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" &
chest_pain_type == 0)) / nrow(heart_data30)
P_YES_1 = nrow(subset(heart_data30, BP_New == "YES" &
chest_pain_type == 1)) / nrow(heart_data30)
P_NO_0 = nrow(subset(heart_data30, BP_New == "NO" &
chest_pain_type == 0)) / nrow(heart_data30)
P_NO_1 = nrow(subset(heart_data30, BP_New == "NO" &
chest_pain_type == 1)) / nrow(heart_data30)
P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" &
chest_pain_type == 0)) / nrow(heart_data30)
#Creation of the variables that have the conditional probabilities
#with the outcome being yes for target.
P11 = P_YES_YES_0 / P_YES_0
P22 = P_YES_YES_1 / P_YES_1
P33 = P_YES_NO_0 / P_NO_0
P44 = P_YES_NO_1 / P_NO_1
print(paste("The conditional probability of having heart disease with high BP and No chest Pain", P11))
print(paste("The conditional probability of having heart disease with high BP and chest Pain", P22))
print(paste("The conditional probability of having heart disease withregular BP and No chest Pain", P33))
print(paste("The conditional probability of having heart disease with high BP and chest Pain", P44))
Object1 <- ftable(heart_data30)
Object2 <- ftable(heart_data30[,-1])
P1 = Object1[3,1] / Object2[2,1] # Target=yes, BP_New=No & chest_pain_type=0
P2 = Object1[3,1] / Object2[2,2]
P3 = Object1[3,1] / Object2[1,1]
P4 = Object1[3,1] / Object2[1,2]
P1
P2
P3
P4
Object2
Object[3,1]
Object1[3,1]
Object1
Object1
Object1[3,1]
Object1[3,2]
#Create a new dataframe with the first 30 entries which only includes the
#features Target, BP_New, and chest_pain_type
heart_data30 = heart_Data[1:30, c("Target", "BP_New", "chest_pain_type")]
#Creation of piviot table using all three variables
pivot1 = ftable(heart_data30)
pivot1
#Creation of each probability
P_YES_YES_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES"
& chest_pain_type == 1)) / nrow(heart_data30)
P_YES_NO_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" &
chest_pain_type == 0)) / nrow(heart_data30)
P_YES_NO_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" &
chest_pain_type == 1)) / nrow(heart_data30)
P_YES_YES_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" &
chest_pain_type == 0)) / nrow(heart_data30)
P_YES_1 = nrow(subset(heart_data30, BP_New == "YES" &
chest_pain_type == 1)) / nrow(heart_data30)
P_NO_0 = nrow(subset(heart_data30, BP_New == "NO" &
chest_pain_type == 0)) / nrow(heart_data30)
P_NO_1 = nrow(subset(heart_data30, BP_New == "NO" &
chest_pain_type == 1)) / nrow(heart_data30)
P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" &
chest_pain_type == 0)) / nrow(heart_data30)
#Creation of the variables that have the conditional probabilities
#with the outcome being yes for target.
P11 = P_YES_YES_0 / P_YES_0
P22 = P_YES_YES_1 / P_YES_1
P33 = P_YES_NO_0 / P_NO_0
P44 = P_YES_NO_1 / P_NO_1
print(paste("The conditional probability of having heart disease with high BP and No chest Pain", P11))
print(paste("The conditional probability of having heart disease with high BP and chest Pain", P22))
print(paste("The conditional probability of having heart disease withregular BP and No chest Pain", P33))
print(paste("The conditional probability of having heart disease with high BP and chest Pain", P44))
Object1 <- ftable(heart_data30)
Object2 <- ftable(heart_data30[,-1])
P1 = Object1[4,1] / Object2[2,1]
P2 = Object1[4,2] / Object2[2,2]
P3 = Object1[3,1] / Object2[1,1]
P4 = Object1[3,2] / Object2[1,2]
P1
P2
P3
P4
#Partitioned the data
train_index = createDataPartition(heart_Data$Target, p = 0.6, list = FALSE)
#Training data created
trainDF = heart_Data[train_index,]
#Validation data created
validationDF = heart_Data[-train_index,]
#Creation of the Naive Bayes Classifier based on BP and Chest Pain
nb_model = naive_bayes(Target ~ BP_New * chest_pain_type,
data = trainDF, laplace = 0)
#Predictions made using the Classifier
train_pred = predict(nb_model, validationDF)
#confusion matrix
validationDF$Target = as.factor(validationDF$Target)
confusionMatrix(train_pred, validationDF$Target, positive = "YES")
#Created the probability of having heart disease
P_YES = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
#Using the case of a observation having high BP and Chest Pain,
#I used Bayes theorem to find the probability
naive = (P_YES_YES_1 * P_YES) / P_YES_1
naive
#Created the probability of having heart disease
P_YES = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
P2_YES =nrow(subset(heart_Data, Target == "YES")) / nrow(heart_Data)
P2_YES_YES_1 = nrow(subset(heart_Data, Target == "YES" & BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_Data)
P2_Yes_1 = nrow(subset(heart_Data, BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_Data)
#Using the case of a observation having high BP and Chest Pain,
#I used Bayes theorem to find the probability
naive = (P2_YES_YES_1 * P2_YES) / P2_YES_1
#Created the probability of having heart disease
P_YES = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
P2_YES =nrow(subset(heart_Data, Target == "YES")) / nrow(heart_Data)
P2_YES_YES_1 = nrow(subset(heart_Data, Target == "YES" & BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_Data)
P2_YES_1 = nrow(subset(heart_Data, BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_Data)
#Using the case of a observation having high BP and Chest Pain,
#I used Bayes theorem to find the probability
naive = (P2_YES_YES_1 * P2_YES) / P2_YES_1
naive
#call Packages
library(naivebayes)
library(caret)
library(pivottabler)
library(gmodels)
#Import Data
heart_Data = read.csv("C:\\Users\\Urza\\OneDrive\\BA 64060 Fundementals of Machine Learning\\Module 5\\Assignment 4\\heart_disease.csv")
#Set Seed for consistency
set.seed(123)
#Creating Dummy variable for Target Yes if MAX HeartRate
#greater than 170 else NO
for(i in 1:length(heart_Data)){
heart_Data$Target[i] = ifelse(heart_Data$MAX_HeartRate[i] > 170, "YES", "NO")
}
#Creating Dummy variable for BP_New if Blood_Pressure is greater
#than 120 else NO
for(i in 1:length(heart_Data)){
heart_Data$BP_New[i] = ifelse(heart_Data$Blood_Pressure[i] > 120, "YES", "NO")
}
View(heart_Data)
length(heart_Data)
nrow(heart_Data)
#call Packages
library(naivebayes)
library(caret)
library(pivottabler)
library(gmodels)
#Import Data
heart_Data = read.csv("C:\\Users\\Urza\\OneDrive\\BA 64060 Fundementals of Machine Learning\\Module 5\\Assignment 4\\heart_disease.csv")
#Set Seed for consistency
set.seed(123)
#Creating Dummy variable for Target Yes if MAX HeartRate
#greater than 170 else NO
for(i in 1:nrow(heart_Data)){
heart_Data$Target[i] = ifelse(heart_Data$MAX_HeartRate[i] > 170, "YES", "NO")
}
#Creating Dummy variable for BP_New if Blood_Pressure is greater
#than 120 else NO
for(i in 1:nrow(heart_Data)){
heart_Data$BP_New[i] = ifelse(heart_Data$Blood_Pressure[i] > 120, "YES", "NO")
}
View(heart_Data)
View(heart_Data)
#call Packages
library(naivebayes)
library(caret)
library(pivottabler)
library(gmodels)
#Import Data
heart_Data = read.csv("C:\\Users\\Urza\\OneDrive\\BA 64060 Fundementals of Machine Learning\\Module 5\\Assignment 4\\heart_disease.csv")
#Set Seed for consistency
set.seed(123)
#Creating Dummy variable for Target Yes if MAX HeartRate
#greater than 170 else NO
for(i in 1:nrow(heart_Data)){
heart_Data$Target[i] = ifelse(heart_Data$MAX_HeartRate[i] > 170, "YES", "NO")
}
#Creating Dummy variable for BP_New if Blood_Pressure is greater
#than 120 else NO
for(i in 1:nrow(heart_Data)){
heart_Data$BP_New[i] = ifelse(heart_Data$Blood_Pressure[i] > 120, "YES", "NO")
}
#Created a table to compare the target for heart disease with if they had
#chest pain
#Target_table = table(heart_Data$Target, heart_Data$chest_pain_type,
#  dnn = c("Heart Disease", "Chest Pain"))
Target_table <- table(heart_Data$Target)
Target_table
Probability_No <- Target_table["NO"] / sum(Target_table)
Probability_No
#Created the table to display probabilities instead of just frequency count
#prop.table(Target_table)
#Create a new dataframe with the first 30 entries which only includes the
#features Target, BP_New, and chest_pain_type
heart_data30 = heart_Data[1:30, c("Target", "BP_New", "chest_pain_type")]
#Creation of piviot table using all three variables
pivot1 = ftable(heart_data30)
pivot1
#Creation of each probability
P_YES_YES_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES"
& chest_pain_type == 1)) / nrow(heart_data30)
P_YES_NO_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" &
chest_pain_type == 0)) / nrow(heart_data30)
P_YES_NO_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" &
chest_pain_type == 1)) / nrow(heart_data30)
P_YES_YES_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" &
chest_pain_type == 0)) / nrow(heart_data30)
P_YES_1 = nrow(subset(heart_data30, BP_New == "YES" &
chest_pain_type == 1)) / nrow(heart_data30)
P_NO_0 = nrow(subset(heart_data30, BP_New == "NO" &
chest_pain_type == 0)) / nrow(heart_data30)
P_NO_1 = nrow(subset(heart_data30, BP_New == "NO" &
chest_pain_type == 1)) / nrow(heart_data30)
P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" &
chest_pain_type == 0)) / nrow(heart_data30)
#Creation of the variables that have the conditional probabilities
#with the outcome being yes for target.
P11 = P_YES_YES_0 / P_YES_0
P22 = P_YES_YES_1 / P_YES_1
P33 = P_YES_NO_0 / P_NO_0
P44 = P_YES_NO_1 / P_NO_1
print(paste("The conditional probability of having heart disease with high BP and No chest Pain", P11))
print(paste("The conditional probability of having heart disease with high BP and chest Pain", P22))
print(paste("The conditional probability of having heart disease withregular BP and No chest Pain", P33))
print(paste("The conditional probability of having heart disease with high BP and chest Pain", P44))
Object1 <- ftable(heart_data30)
Object2 <- ftable(heart_data30[,-1])
P1 = Object1[4,1] / Object2[2,1]
P2 = Object1[4,2] / Object2[2,2]
P3 = Object1[3,1] / Object2[1,1]
P4 = Object1[3,2] / Object2[1,2]
P1
P2
P3
P4
#Created a numeric variable of 30 entries all set to 0
Probability_Target = rep(0,30)
#Using a for loop and an if statement each observation in heart_data30 was
#checked and given a probability based on the conditional probabilities
#calculated in Part A, because the only variable that resulted in heart_disease
#was the presence of chest pain any other option would be set to 0
for (i in 1:30){
if (heart_data30$BP_New[i] == "YES" & heart_data30$chest_pain_type[i] == 1){
Probability_Target[i] = P2
} else if (heart_data30$BP_New[i] == "NO" &
heart_data30$chest_pain_type[i] == 1){
Probability_Target[i] = P4
} else {
Probability_Target[i] = 0
}
}
#Adding the Probability_Target variable to our dataframe
heart_data30$Probability_Target = Probability_Target
#Using the Probability_Target and a cutoff value of 0.5 a prediction was
#made if the person would have heart disease or not
heart_data30$Pred_Probability =
ifelse(heart_data30$Probability_Target > 0.5, "Yes", "No")
table(heart_data30$Target, heart_data30$Pred_Probability)
#Created the probability of having heart disease
P_YES = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
P2_YES =nrow(subset(heart_Data, Target == "YES")) / nrow(heart_Data)
P2_YES_YES_1 = nrow(subset(heart_Data, Target == "YES" & BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_Data)
P2_YES_1 = nrow(subset(heart_Data, BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_Data)
#Using the case of a observation having high BP and Chest Pain,
#I used Bayes theorem to find the probability
naive = (P2_YES_YES_1 * P2_YES) / P2_YES_1
naive
#Partitioned the data
train_index = createDataPartition(heart_Data$Target, p = 0.6, list = FALSE)
#Training data created
trainDF = heart_Data[train_index,]
#Validation data created
validationDF = heart_Data[-train_index,]
#Creation of the Naive Bayes Classifier based on BP and Chest Pain
nb_model = naive_bayes(Target ~ BP_New + chest_pain_type,
data = trainDF, laplace = 0)
#Predictions made using the Classifier
train_pred = predict(nb_model, validationDF)
#confusion matrix
validationDF$Target = as.factor(validationDF$Target)
confusionMatrix(train_pred, validationDF$Target, positive = "YES")
nrow(subset(heart_data30, Target == "YES"))
#Created the probability of having heart disease
P_YES = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
P2_YES =nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
P2_YES_YES_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_Data)
P2_YES_1 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_Data)
#Using the case of a observation having high BP and Chest Pain,
#I used Bayes theorem to find the probability
naive = (P2_YES_YES_1 * P2_YES) / P2_YES_1
naive
nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 1))
nrow(subset(heart_data30, Target == "YES" & chest_pain_type == 1))
nrow(subset(heart_data30, Target == "YES" & BP_New == "YES"))
#Created the probability of having heart disease
P_YES = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
P2_YES =nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
P2_YES_YES_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
P2_YES_1 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
#Using the case of a observation having high BP and Chest Pain,
#I used Bayes theorem to find the probability
naive = (P2_YES_YES_1 * P2_YES) / P2_YES_1
naive
#Created the probability of having heart disease
P_YES = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
P2_YES =nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
P2_YES_YES_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
P2_YES_1 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
#Using the case of a observation having high BP and Chest Pain,
#I used Bayes theorem to find the probability
naive = (P2_YES_YES_1 * P2_YES) / P2_YES_1
naive
P_BPY_TY = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES")) / nrow(subset(heart_data30, Target == "YES"))
P_CP1_TY = nrow(subset(heart_data30, Target == "YES" & chest_pain_type == 1)) / nrow(subset(heart_data30, Target == "YES"))
Naive2 = (P_BPY_TY * P_CP1_TY * P_YES)/ P2_YES_1
Naive2
library(factoextra)
install.packages("factoextra")
library(factoextra)
library(factoextra)
#laptop Data Import
wines = read.csv("C:\\wine-clustering.csv")
str(wines)
library(factoextra)
library(dplyr)
#laptop Data Import
wines = read.csv("C:\\wine-clustering.csv")
#Check the structure of the data
str(wines)
#Check for missing values
colMeans(is.na(wines))
?scale
summary(wines)
wines.norm = scale(wines)
summary(wines.norm)
fviz_nbclust(wines.norm, method = "wss")
fviz_nbclust(wines.norm, kmeans, method = "wss")
fviz_nbclust(wines.norm, kmeans, method = "wss", k.max = 15)
fviz_nbclust(wines.norm, kmeans, method = "wss", k.max = 20)
fviz_nbclust(wines.norm, kmeans, method = "wss")
