fviz_nbclust(wines.norm, kmeans, method = "silhouette")
#Performing K means with a k value of 3 based on the elbow point and the peak Silhoutte
k3 = kmeans(wines.norm, centers = 3, nstart = 25)
#Plot of clusters
fviz_cluster(k3, data = wines.norm)
#Centers
k3$centers
#Check the structure of the data
str(wines)
#summary check
summary(wines)
#Check for missing values
colMeans(is.na(wines))
#Normalize data
wines.norm = scale(wines)
#finding a optimal value for k using Elbow Method
fviz_nbclust(wines.norm, kmeans, method = "wss")
#finding optimal value for k using Silhouette
fviz_nbclust(wines.norm, kmeans, method = "silhouette")
#Performing K means with a k value of 3 based on the elbow point and the peak Silhoutte
k3 = kmeans(wines.norm, centers = 3, nstart = 25)
#Plot of clusters
fviz_cluster(k3, data = wines.norm)
#Centers
k3$centers
#size
k3$size
#withinss
k3$withinss
#Check the structure of the data
str(wines)
#summary check
summary(wines)
#Check for missing values
colMeans(is.na(wines))
#Normalize data
wines.norm = scale(wines)
#finding a optimal value for k using Elbow Method
fviz_nbclust(wines.norm, kmeans, method = "wss")
#finding optimal value for k using Silhouette
fviz_nbclust(wines.norm, kmeans, method = "silhouette")
#Performing K means with a k value of 3 based on the elbow point and the peak Silhoutte
k3 = kmeans(wines.norm, centers = 3, nstart = 50)
#Plot of clusters
fviz_cluster(k3, data = wines.norm)
#Centers
k3$centers
#size
k3$size
#withinss
k3$withinss
#Check the structure of the data
str(wines)
#summary check
summary(wines)
#Check for missing values
colMeans(is.na(wines))
#Normalize data
wines.norm = scale(wines)
#finding a optimal value for k using Elbow Method
fviz_nbclust(wines.norm, kmeans, method = "wss")
#finding optimal value for k using Silhouette
fviz_nbclust(wines.norm, kmeans, method = "silhouette")
#Performing K means with a k value of 3 based on the elbow point and the peak Silhoutte
k3 = kmeans(wines.norm, centers = 3, nstart = 25)
#Plot of clusters
fviz_cluster(k3, data = wines.norm)
#Centers
k3$centers
#size
k3$size
#withinss
k3$withinss
View(wines)
?fviz_cluster
View(wines.norm)
#Check the structure of the data
str(wines)
#summary check
summary(wines)
#Check for missing values
colMeans(is.na(wines))
#Normalize data
wines.norm = scale(wines)
#finding a optimal value for k using Elbow Method
fviz_nbclust(wines.norm, kmeans, method = "wss")
#finding optimal value for k using Silhouette
fviz_nbclust(wines.norm, kmeans, method = "silhouette")
#Performing K means with a k value of 3 based on the elbow point and the peak Silhoutte
k3 = kmeans(wines.norm, centers = 3, nstart = 25)
#Plot of clusters
fviz_cluster(k3, data = wines.norm, choose.vars = c("Proanthocyanins", "OD280"))
#Centers
k3$centers
#size
k3$size
#withinss
k3$withinss
#Check the structure of the data
str(wines)
#summary check
summary(wines)
#Check for missing values
colMeans(is.na(wines))
#Normalize data
wines.norm = scale(wines)
#finding a optimal value for k using Elbow Method
fviz_nbclust(wines.norm, kmeans, method = "wss")
#finding optimal value for k using Silhouette
fviz_nbclust(wines.norm, kmeans, method = "silhouette")
#Performing K means with a k value of 3 based on the elbow point and the peak Silhoutte
k3 = kmeans(wines.norm, centers = 3, nstart = 25)
#Plot of clusters
fviz_cluster(k3, data = wines.norm)
#Centers
k3$centers
#size
k3$size
#withinss
k3$withinss
View(wines.norm)
View(wines)
#Check the structure of the data
str(wines)
#summary check
summary(wines)
#Check for missing values
colMeans(is.na(wines))
#Normalize data
wines.norm = scale(wines)
#finding a optimal value for k using Elbow Method
fviz_nbclust(wines.norm, kmeans, method = "wss")
#finding optimal value for k using Silhouette
fviz_nbclust(wines.norm, kmeans, method = "silhouette")
#Performing K means with a k value of 3 based on the elbow point and the peak Silhoutte
k3 = kmeans(wines.norm, centers = 3, nstart = 25)
#Plot of clusters
fviz_cluster(k3, data = wines)
#Centers
k3$centers
#size
k3$size
#withinss
k3$withinss
install.packages("dbscan")
install.packages("fpcscan")
install.packages("fpc")
library(factoextra)
library(dplyr)
library(dbscan)
library(fpc)
set.seed(123)
#laptop Data Import
#wines = read.csv("C:\\wine-clustering.csv")
#Desktop Data Import
wines = read.csv("F:\\wine-clustering.csv")
dbscan::kNNdistplot(wines.norm, k = 3)
dbscan::kNNdistplot(wines.norm, k = 3) abline(h = 2.8, lty = 2)
dbscan::kNNdistplot(wines.norm, k = 3)abline(h = 2.8, lty = 2)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.8, MinPts = 3)
plot(dbs.wine, wines.norm, main = "DBSCAN", frame = FALSE)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.8, MinPts = 3)
#plot(dbs.wine, wines.norm, main = "DBSCAN", frame = FALSE)
fviz_cluster(dbs.wine, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.5, MinPts = 3)
#plot(dbs.wine, wines.norm, main = "DBSCAN", frame = FALSE)
fviz_cluster(dbs.wine, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = .5, MinPts = 3)
#plot(dbs.wine, wines.norm, main = "DBSCAN", frame = FALSE)
fviz_cluster(dbs.wine, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 1, MinPts = 3)
#plot(dbs.wine, wines.norm, main = "DBSCAN", frame = FALSE)
fviz_cluster(dbs.wine, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2, MinPts = 3)
#plot(dbs.wine, wines.norm, main = "DBSCAN", frame = FALSE)
fviz_cluster(dbs.wine, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.1, MinPts = 3)
#plot(dbs.wine, wines.norm, main = "DBSCAN", frame = FALSE)
fviz_cluster(dbs.wine, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.2, MinPts = 3)
#plot(dbs.wine, wines.norm, main = "DBSCAN", frame = FALSE)
fviz_cluster(dbs.wine, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.3, MinPts = 3)
#plot(dbs.wine, wines.norm, main = "DBSCAN", frame = FALSE)
fviz_cluster(dbs.wine, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.4, MinPts = 3)
#plot(dbs.wine, wines.norm, main = "DBSCAN", frame = FALSE)
fviz_cluster(dbs.wine, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.3, MinPts = 3)
#plot(dbs.wine, wines.norm, main = "DBSCAN", frame = FALSE)
fviz_cluster(dbs.wine, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.3, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.3, MinPts = 3)
#plot(dbs.wine, wines.norm, main = "DBSCAN", frame = FALSE)
fviz_cluster(dbs.wine, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.3, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3.1, MinPts = 3)
#plot(dbs.wine, wines.norm, main = "DBSCAN", frame = FALSE)
fviz_cluster(dbs.wine, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.3, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3.2, MinPts = 3)
#plot(dbs.wine, wines.norm, main = "DBSCAN", frame = FALSE)
fviz_cluster(dbs.wine, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 3.2, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3.2, MinPts = 3)
#plot(dbs.wine, wines.norm, main = "DBSCAN", frame = FALSE)
fviz_cluster(dbs.wine, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 3.2, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3, MinPts = 3)
#plot(dbs.wine, wines.norm, main = "DBSCAN", frame = FALSE)
fviz_cluster(dbs.wine, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 3, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3, MinPts = 3)
#plot(dbs.wine, wines.norm, main = "DBSCAN", frame = FALSE)
fviz_cluster(dbs.wine, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 3, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.9, MinPts = 3)
#plot(dbs.wine, wines.norm, main = "DBSCAN", frame = FALSE)
fviz_cluster(dbs.wine, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 3, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3, MinPts = 3)
#plot(dbs.wine, wines.norm, main = "DBSCAN", frame = FALSE)
fviz_cluster(dbs.wine, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 3, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.99, MinPts = 3)
#plot(dbs.wine, wines.norm, main = "DBSCAN", frame = FALSE)
fviz_cluster(dbs.wine, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 3, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.98, MinPts = 3)
#plot(dbs.wine, wines.norm, main = "DBSCAN", frame = FALSE)
fviz_cluster(dbs.wine, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 3, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.9, MinPts = 3)
#plot(dbs.wine, wines.norm, main = "DBSCAN", frame = FALSE)
fviz_cluster(dbs.wine, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 3, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.95, MinPts = 3)
#plot(dbs.wine, wines.norm, main = "DBSCAN", frame = FALSE)
fviz_cluster(dbs.wine, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 3, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3, MinPts = 3)
#plot(dbs.wine, wines.norm, main = "DBSCAN", frame = FALSE)
fviz_cluster(dbs.wine, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 3, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3, MinPts = 3)
plot(dbs.wine, wines.norm, main = "DBSCAN", frame = FALSE)
fviz_cluster(dbs.wine, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 3, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3, MinPts = 3)
fviz_cluster(dbs.wine, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 3, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3, MinPts = 3)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 3, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
View(dbs.wine)
View(wines)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 3, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3, MinPts = 26)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 26)
abline(h = 3, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3, MinPts = 26)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 26)
abline(h = 3.5, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3, MinPts = 26)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 26)
abline(h = 3.5, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3.5, MinPts = 26)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 26)
abline(h = 3.5, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 4, MinPts = 26)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 26)
abline(h = 3.5, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2, MinPts = 26)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 26)
abline(h = 3.5, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3, MinPts = 26)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 26)
abline(h = 3.5, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 3.5, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 3, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.8, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
?abline
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3.5, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 4, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3.5, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
plot(wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.8, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.8, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 14)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.8, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 14)
abline(h = 3.1, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3.1, MinPts = 14)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 14)
abline(h = 3.1, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3.4, MinPts = 14)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 14)
abline(h = 3.1, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3.5, MinPts = 14)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 14)
abline(h = 3.1, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 4, MinPts = 14)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 14)
abline(h = 3.1, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3.8, MinPts = 14)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
data("moons")
View(moons)
rm(moons)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 3.1, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3.8, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.6, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.6, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
fviz_cluster(wines, wines.norm)
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.8, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.8, MinPts = 4)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 4)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.8, MinPts = 4)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 4)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.5, MinPts = 4)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.8, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
