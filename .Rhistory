axis(side=1, at=seq(2,n,13), labels=labs[seq(2,n,2)], cex.axis=0.6)
#Check the structure of the data
str(wines)
#summary check
summary(wines)
#Check for missing values
colMeans(is.na(wines))
#Normalize data
wines.norm = scale(wines)
#finding a optimal value for k using Elbow Method
fviz_nbclust(wines.norm, kmeans, method = "wss")
#finding optimal value for k using Silhouette
fviz_nbclust(wines.norm, kmeans, method = "silhouette")
#Performing K means with a k value of 3 based on the elbow point and the peak Silhouette
k3 = kmeans(wines.norm, centers = 3, nstart = 25)
#Plot of clusters
fviz_cluster(k3, data = wines.norm)
labs = names(wines)
#Centers
mincenter = min(k3$centers)
maxcenter = max(k3$centers)
plot(c(0), xaxt = 'n', ylab = "", type ="l", ylim = c(mincenter, maxcenter), xlim = c(0, 13))
axis(1, at = c(1:13), xpd = TRUE, labels = c("Alc","Malic","Ash"), cex.axis = 0.35)
#Check the structure of the data
str(wines)
#summary check
summary(wines)
#Check for missing values
colMeans(is.na(wines))
#Normalize data
wines.norm = scale(wines)
#finding a optimal value for k using Elbow Method
fviz_nbclust(wines.norm, kmeans, method = "wss")
#finding optimal value for k using Silhouette
fviz_nbclust(wines.norm, kmeans, method = "silhouette")
#Performing K means with a k value of 3 based on the elbow point and the peak Silhouette
k3 = kmeans(wines.norm, centers = 3, nstart = 25)
#Plot of clusters
fviz_cluster(k3, data = wines.norm)
labs = names(wines)
#Centers
mincenter = min(k3$centers)
maxcenter = max(k3$centers)
plot(c(0), xaxt = 'n', ylab = "", type ="l", ylim = c(mincenter, maxcenter), xlim = c(0, 13))
axis(1, at = c(1:13), xpd = TRUE, labels = c("Alc","Malic","Ash","Alca_Ash","Mag","T_Phenols","Flavanoids","NonFlav", "Proanth", "Color", "Hue", "OD280", "Proline"), cex.axis = 0.35)
for(i in c(1:3))
lines(k3$centers[i,], lty = i, lwd = 2)
text(x = 0.5, y = k3$centers[, 1], labels = paste("Cluster", c(1:3)))
#size
k3$size
#withinss
k3$withinss
#Check the structure of the data
str(wines)
#summary check
summary(wines)
#Check for missing values
colMeans(is.na(wines))
#Normalize data
wines.norm = scale(wines)
#finding a optimal value for k using Elbow Method
fviz_nbclust(wines.norm, kmeans, method = "wss")
#finding optimal value for k using Silhouette
fviz_nbclust(wines.norm, kmeans, method = "silhouette")
#Performing K means with a k value of 3 based on the elbow point and the peak Silhouette
k3 = kmeans(wines.norm, centers = 3, nstart = 25)
#Plot of clusters
fviz_cluster(k3, data = wines.norm)
labs = names(wines)
#Centers
mincenter = min(k3$centers)
maxcenter = max(k3$centers)
plot(c(0), xaxt = 'n', ylab = "", type ="l", ylim = c(mincenter, maxcenter), xlim = c(0, 13))
axis(1, at = c(1:13), xpd = TRUE, labels = c("Alc","Malic","Ash","Alca_Ash","Mag","T_Phenols","Flavanoids","NonFlav", "Proanth", "Color", "Hue", "OD280", "Proline"))
for(i in c(1:3))
lines(k3$centers[i,], lty = i, lwd = 2)
text(x = 0.5, y = k3$centers[, 1], labels = paste("Cluster", c(1:3)))
#size
k3$size
#withinss
k3$withinss
#Check the structure of the data
str(wines)
#summary check
summary(wines)
#Check for missing values
colMeans(is.na(wines))
#Normalize data
wines.norm = scale(wines)
#finding a optimal value for k using Elbow Method
fviz_nbclust(wines.norm, kmeans, method = "wss")
#finding optimal value for k using Silhouette
fviz_nbclust(wines.norm, kmeans, method = "silhouette")
#Performing K means with a k value of 3 based on the elbow point and the peak Silhouette
k3 = kmeans(wines.norm, centers = 3, nstart = 25)
#Plot of clusters
fviz_cluster(k3, data = wines.norm)
labs = names(wines)
#Centers
mincenter = min(k3$centers)
maxcenter = max(k3$centers)
plot(c(0), xaxt = 'n', ylab = "", type ="l", ylim = c(mincenter, maxcenter), xlim = c(0, 13))
axis(1, at = c(1:13), xpd = TRUE, labels = c("Alc","Malic","Ash","Alca_Ash","Mag","T_Phenols","Flavanoids","NonFlav", "Proanth", "Color", "Hue", "OD280", "Proline"), cex.axis = 0.6)
for(i in c(1:3))
lines(k3$centers[i,], lty = i, lwd = 2)
text(x = 0.5, y = k3$centers[, 1], labels = paste("Cluster", c(1:3)))
#size
k3$size
#withinss
k3$withinss
#Check the structure of the data
str(wines)
#summary check
summary(wines)
#Check for missing values
colMeans(is.na(wines))
#Normalize data
wines.norm = scale(wines)
#finding a optimal value for k using Elbow Method
fviz_nbclust(wines.norm, kmeans, method = "wss")
#finding optimal value for k using Silhouette
fviz_nbclust(wines.norm, kmeans, method = "silhouette")
#Performing K means with a k value of 3 based on the elbow point and the peak Silhouette
k3 = kmeans(wines.norm, centers = 3, nstart = 25)
#Plot of clusters
fviz_cluster(k3, data = wines.norm)
labs = names(wines)
#Centers
mincenter = min(k3$centers)
maxcenter = max(k3$centers)
plot(c(0), xaxt = 'n', ylab = "", type ="l", ylim = c(mincenter, maxcenter), xlim = c(0, 13))
axis(1, at = c(1:13), xpd = TRUE, labels = c("Alc","Malic","Ash","Alca_Ash","Mag","T_Phenols","Flavanoids","NonFlav", "Proanth", "Color", "Hue", "OD280", "Proline"), cex.axis = 0.5)
for(i in c(1:3))
lines(k3$centers[i,], lty = i, lwd = 2)
text(x = 0.5, y = k3$centers[, 1], labels = paste("Cluster", c(1:3)))
#size
k3$size
#withinss
k3$withinss
#Check the structure of the data
str(wines)
#summary check
summary(wines)
#Check for missing values
colMeans(is.na(wines))
#Normalize data
wines.norm = scale(wines)
#finding a optimal value for k using Elbow Method
fviz_nbclust(wines.norm, kmeans, method = "wss")
#finding optimal value for k using Silhouette
fviz_nbclust(wines.norm, kmeans, method = "silhouette")
#Performing K means with a k value of 3 based on the elbow point and the peak Silhouette
k3 = kmeans(wines.norm, centers = 3, nstart = 25)
#Plot of clusters
fviz_cluster(k3, data = wines.norm)
labs = names(wines)
#Centers
mincenter = min(k3$centers)
maxcenter = max(k3$centers)
plot(c(0), xaxt = 'n', ylab = "", type ="l", ylim = c(mincenter, maxcenter), xlim = c(0, 13))
axis(1, at = c(1:13), xpd = TRUE, labels = c("Alc","Malic","Ash","Alca_Ash","Mag","T_Phenols","Flavanoids","NonFlav", "Proanth", "Color", "Hue", "OD280", "Proline"), cex.axis = 0.45)
for(i in c(1:3))
lines(k3$centers[i,], lty = i, lwd = 2)
text(x = 0.5, y = k3$centers[, 1], labels = paste("Cluster", c(1:3)))
#size
k3$size
#withinss
k3$withinss
#Check the structure of the data
str(wines)
#summary check
summary(wines)
#Check for missing values
colMeans(is.na(wines))
#Normalize data
wines.norm = scale(wines)
#finding a optimal value for k using Elbow Method
fviz_nbclust(wines.norm, kmeans, method = "wss")
#finding optimal value for k using Silhouette
fviz_nbclust(wines.norm, kmeans, method = "silhouette")
#Performing K means with a k value of 3 based on the elbow point and the peak Silhouette
k3 = kmeans(wines.norm, centers = 3, nstart = 25)
#Plot of clusters
fviz_cluster(k3, data = wines.norm)
labs = names(wines)
#Centers
mincenter = min(k3$centers)
maxcenter = max(k3$centers)
plot(c(0), xaxt = 'n', ylab = "", type ="l", ylim = c(mincenter, maxcenter), xlim = c(0, 13))
axis(1, at = c(1:13), xpd = TRUE, labels = c("Alc","Malic","Ash","Alca_Ash","Mag","T_Phenols","Flavanoids","NonFlav", "Proanth", "Color", "Hue", "OD280", "Proline"), cex.axis = 0.4)
for(i in c(1:3))
lines(k3$centers[i,], lty = i, lwd = 2)
text(x = 0.5, y = k3$centers[, 1], labels = paste("Cluster", c(1:3)))
#size
k3$size
#withinss
k3$withinss
#Check the structure of the data
str(wines)
#summary check
summary(wines)
#Check for missing values
colMeans(is.na(wines))
#Normalize data
wines.norm = scale(wines)
#finding a optimal value for k using Elbow Method
fviz_nbclust(wines.norm, kmeans, method = "wss")
#finding optimal value for k using Silhouette
fviz_nbclust(wines.norm, kmeans, method = "silhouette")
#Performing K means with a k value of 3 based on the elbow point and the peak Silhouette
k3 = kmeans(wines, centers = 3, nstart = 25)
#Plot of clusters
fviz_cluster(k3, data = wines)
#Centers
mincenter = min(k3$centers)
maxcenter = max(k3$centers)
plot(c(0), xaxt = 'n', ylab = "", type ="l", ylim = c(mincenter, maxcenter), xlim = c(0, 13))
axis(1, at = c(1:13), xpd = TRUE, labels = c("Alc","Malic","Ash","Alca_Ash","Mag","T_Phenols","Flavanoids","NonFlav", "Proanth", "Color", "Hue", "OD280", "Proline"), cex.axis = 0.4)
for(i in c(1:3))
lines(k3$centers[i,], lty = i, lwd = 2)
text(x = 0.5, y = k3$centers[, 1], labels = paste("Cluster", c(1:3)))
#size
k3$size
#withinss
k3$withinss
#Check the structure of the data
str(wines)
#summary check
summary(wines)
#Check for missing values
colMeans(is.na(wines))
#Normalize data
wines.norm = scale(wines)
#finding a optimal value for k using Elbow Method
fviz_nbclust(wines.norm, kmeans, method = "wss")
#finding optimal value for k using Silhouette
fviz_nbclust(wines.norm, kmeans, method = "silhouette")
#Performing K means with a k value of 3 based on the elbow point and the peak Silhouette
k3 = kmeans(wines.norm, centers = 3, nstart = 25)
#Plot of clusters
fviz_cluster(k3, data = wines.norm)
#Centers
mincenter = min(k3$centers)
maxcenter = max(k3$centers)
plot(c(0), xaxt = 'n', ylab = "", type ="l", ylim = c(mincenter, maxcenter), xlim = c(0, 13))
axis(1, at = c(1:13), xpd = TRUE, labels = c("Alc","Malic","Ash","Alca_Ash","Mag","T_Phenols","Flavanoids","NonFlav", "Proanth", "Color", "Hue", "OD280", "Proline"), cex.axis = 0.4)
for(i in c(1:3))
lines(k3$centers[i,], lty = i, lwd = 2)
text(x = 0.5, y = k3$centers[, 1], labels = paste("Cluster", c(1:3)))
#size
k3$size
#withinss
k3$withinss
#Check the structure of the data
str(wines)
#summary check
summary(wines)
#Check for missing values
colMeans(is.na(wines))
#Normalize data
wines.norm = scale(wines)
#finding a optimal value for k using Elbow Method
fviz_nbclust(wines.norm, kmeans, method = "wss")
#finding optimal value for k using Silhouette
fviz_nbclust(wines.norm, kmeans, method = "silhouette")
#Performing K means with a k value of 3 based on the elbow point and the peak Silhouette
k3 = kmeans(wines.norm, centers = 3, nstart = 25)
#Plot of clusters
fviz_cluster(k3, data = wines.norm)
#Centers
mincenter = min(k3$centers)
maxcenter = max(k3$centers)
plot(c(0), xaxt = 'n', ylab = "", type ="l", ylim = c(mincenter, maxcenter), xlim = c(0, 13))
axis(1, at = c(1:13), xpd = TRUE, labels = c("Alc","Malic","Ash","Alca_Ash","Mag","T_Phenols","Flavanoids","NonFlav", "Proanth", "Color", "Hue", "OD280", "Proline"), cex.axis = 0.4)
for(i in c(1:3))
lines(k3$centers[i,], lty = i, lwd = 2)
text(x = 0.5, y = k3$centers[, 1], labels = paste("Cluster", c(1:3)))
#size
k3$size
#withinss
k3$withinss
#Check the structure of the data
str(wines)
#summary check
summary(wines)
#Check for missing values
colMeans(is.na(wines))
#Normalize data
wines.norm = scale(wines)
#finding a optimal value for k using Elbow Method
fviz_nbclust(wines.norm, kmeans, method = "wss")
#finding optimal value for k using Silhouette
fviz_nbclust(wines.norm, kmeans, method = "silhouette")
#Performing K means with a k value of 3 based on the elbow point and the peak Silhouette
k3 = kmeans(wines.norm, centers = 3, nstart = 25)
#Plot of clusters
fviz_cluster(k3, data = wines.norm)
#Centers
k3$centers
mincenter = min(k3$centers)
maxcenter = max(k3$centers)
plot(c(0), xaxt = 'n', ylab = "", type ="l", ylim = c(mincenter, maxcenter), xlim = c(0, 13))
axis(1, at = c(1:13), xpd = TRUE, labels = c("Alc","Malic","Ash","Alca_Ash","Mag","T_Phenols","Flavanoids","NonFlav", "Proanth", "Color", "Hue", "OD280", "Proline"), cex.axis = 0.4)
for(i in c(1:3))
lines(k3$centers[i,], lty = i, lwd = 2)
text(x = 0.5, y = k3$centers[, 1], labels = paste("Cluster", c(1:3)))
#size
k3$size
#withinss
k3$withinss
#determining eps
dbscan::kNNdistplot(wines.norm, k = 14)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.8, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 14)
abline(h = 3.1, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3.1, MinPts = 14)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 26)
abline(h = 3.1, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3.1, MinPts = 14)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 26)
abline(h = 3.6, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3.6, MinPts = 26)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 26)
abline(h = 3.7, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3.7, MinPts = 26)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.8, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.8, MinPts = 26)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.8, MinPts = 50)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.8, MinPts = 45)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.8, MinPts = 40)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.8, MinPts = 26)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.8, MinPts = 1)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.8, MinPts = 2)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.8, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 4.5, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = .5, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3.3, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.5, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.4, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.3, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.2, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.3, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.3, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.3, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 26)
abline(h = 3.7, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3.7, MinPts = 26)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
library(factoextra)
library(dplyr)
library(dbscan)
library(fpc)
library(ggplot2)
set.seed(123)
#laptop Data Import
#wines = read.csv("C:\\wine-clustering.csv")
#Desktop Data Import
wines = read.csv("F:\\wine-clustering.csv")
#Check the structure of the data
str(wines)
#summary check
summary(wines)
#Check for missing values
colMeans(is.na(wines))
#Normalize data
wines.norm = scale(wines)
#finding a optimal value for k using Elbow Method
fviz_nbclust(wines.norm, kmeans, method = "wss")
#finding optimal value for k using Silhouette
fviz_nbclust(wines.norm, kmeans, method = "silhouette")
#Performing K means with a k value of 3 based on the elbow point and the peak Silhouette
k3 = kmeans(wines.norm, centers = 3, nstart = 25)
#Plot of clusters
fviz_cluster(k3, data = wines.norm)
#Centers
k3$centers
#Setting up and plotting centroids
mincenter = min(k3$centers)
maxcenter = max(k3$centers)
plot(c(0), xaxt = 'n', ylab = "", type ="l", ylim = c(mincenter, maxcenter), xlim = c(0, 13))
axis(1, at = c(1:13), xpd = TRUE, labels = c("Alc","Malic","Ash","Alca_Ash","Mag","T_Phenols","Flavanoids","NonFlav", "Proanth", "Color", "Hue", "OD280", "Proline"), cex.axis = 0.4)
for(i in c(1:3))
lines(k3$centers[i,], lty = i, lwd = 2)
text(x = 0.5, y = k3$centers[, 1], labels = paste("Cluster", c(1:3)))
#size
k3$size
#withinss
k3$withinss
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.8, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.8, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 26)
abline(h = 3.7, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 3.7, MinPts = 26)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
#determining eps
dbscan::kNNdistplot(wines.norm, k = 3)
abline(h = 2.3, lty = 2)
dbs.wine = fpc::dbscan(wines.norm, eps = 2.3, MinPts = 3)
print(dbs.wine)
fviz_cluster(dbs.wine, wines.norm, stand = FALSE, frame = FALSE, geom = "point")
