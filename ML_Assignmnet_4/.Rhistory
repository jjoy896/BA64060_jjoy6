heart_Data$target[i,] = ifelse(heart_Data$MAX_HeartRate > 170, "YES", "NO")
}
#library(naivebayes)
#library(caret)
#heart_Data = read.csv("C:\\Users\\juanm\\OneDrive\\BA 64060 Fundementals of Machine Learning\\Module 5\\Assignment 4\\heart_disease.csv")
for(i in 1:length(heart_Data)){
heart_Data$target[i] = ifelse(heart_Data$MAX_HeartRate > 170, "YES", "NO")
}
View(heart_Data)
#library(naivebayes)
#library(caret)
#heart_Data = read.csv("C:\\Users\\juanm\\OneDrive\\BA 64060 Fundementals of Machine Learning\\Module 5\\Assignment 4\\heart_disease.csv")
for(i in 1:length(heart_Data)){
heart_Data$target[i] = ifelse(heart_Data$MAX_HeartRate[i] > 170, "YES", "NO")
}
View(heart_Data)
#library(naivebayes)
#library(caret)
#heart_Data = read.csv("C:\\Users\\juanm\\OneDrive\\BA 64060 Fundementals of Machine Learning\\Module 5\\Assignment 4\\heart_disease.csv")
#Creating Dummy variable for Target Yes if MAX HeartRate greater than 170 else NO
for(i in 1:length(heart_Data)){
heart_Data$Target[i] = ifelse(heart_Data$MAX_HeartRate[i] > 170, "YES", "NO")
}
#Creating Dummy variable for BP_New if Blood_Pressure is greater than 120 else NO
for(i in 1:length(heart_Data)){
heart_Data$BP_New[i] = ifelse(heart_Data$Blood_Pressure[i] > 120, "YES", "NO")
}
View(heart_Data)
rm(heart_Data$target)
#library(naivebayes)
#library(caret)
heart_Data = read.csv("C:\\Users\\juanm\\OneDrive\\BA 64060 Fundementals of Machine Learning\\Module 5\\Assignment 4\\heart_disease.csv")
#Creating Dummy variable for Target Yes if MAX HeartRate greater than 170 else NO
for(i in 1:length(heart_Data)){
heart_Data$Target[i] = ifelse(heart_Data$MAX_HeartRate[i] > 170, "YES", "NO")
}
#Creating Dummy variable for BP_New if Blood_Pressure is greater than 120 else NO
for(i in 1:length(heart_Data)){
heart_Data$BP_New[i] = ifelse(heart_Data$Blood_Pressure[i] > 120, "YES", "NO")
}
table(heart_Data$Target, heart_Data$chest_pain_type)
table(heart_Data$Target)
?table
table(heart_Data$Target, row.names("test"))
View(heart_Data)
table(heart_Data$Target, heart_Data$chest_pain_type)
table(heart_Data$Target, heart_Data$chest_pain_type, row.names(c("No Pain", "Chest Pain")))
table(heart_Data$Target, heart_Data$chest_pain_type, row.names(c("No Pain  ", "Chest Pain")))
table(heart_Data$Target, heart_Data$chest_pain_type, dnn = (c("No Pain  ", "Chest Pain")))
table(heart_Data$Target, heart_Data$chest_pain_type, dnn = (c("Heart Disease", "Chest Pain")))
prop.table(heart_Data$Target, heart_Data$chest_pain_type, dnn = (c("Heart Disease", "Chest Pain")))
prob.table(heart_Data$Target, heart_Data$chest_pain_type, dnn = (c("Heart Disease", "Chest Pain")))
prop.table(heart_Data$Target, heart_Data$chest_pain_type, dnn = (c("Heart Disease", "Chest Pain")))
prop.table(heart_Data$Target, heart_Data$chest_pain_type, dnn = c("Heart Disease", "Chest Pain"))
prop.table(heart_Data$Target, heart_Data$chest_pain_type, dnn = c("Heart Disease", "Chest Pain"))
table(heart_Data$Target, heart_Data$chest_pain_type, dnn = c("Heart Disease", "Chest Pain"))
prop.table(heart_Data$Target, heart_Data$chest_pain_type, dnn = c("Heart Disease", "Chest Pain"))
prop.table(heart_Data$Target, heart_Data$chest_pain_type)
table(heart_Data$Target, heart_Data$chest_pain_type)
Target_table = table(heart_Data$Target, heart_Data$chest_pain_type, dnn = c("Heart Disease", "Chest Pain"))
Target_table = table(heart_Data$Target, heart_Data$chest_pain_type, dnn = c("Heart Disease", "Chest Pain"))
prop.table(Target_table)
Target_table = table(heart_Data$Target, heart_Data$chest_pain_type, dnn = c("Heart Disease", "Chest Pain"), responseName = c("No", "Yes")
prop.table(Target_table)
Target_table = table(heart_Data$Target, heart_Data$chest_pain_type, dnn = c("Heart Disease", "Chest Pain"), responseName = c("No", "Yes"))
Target_table = table(heart_Data$Target, heart_Data$chest_pain_type, dnn = c("Heart Disease", "Chest Pain"), responseName = c("No ", "Yes"))
Target_table = table(heart_Data$Target, heart_Data$chest_pain_type, dnn = c("Heart Disease", "Chest Pain"))
prop.table(Target_table)
install.packages(piviottabler)
install.packages("pivottabler")
library(pivottabler)
library(dplyr)
heart_data30 = heart_Data[1:30, c("Target", "BP_New", "chest_pain_type")]
View(heart_data30)
?ftable
heart_data30 = heart_Data[1:30, c("Target", "BP_New", "chest_pain_type")]
pivot1 = ftable(heart_data30)
heart_data30 = heart_Data[1:30, c("Target", "BP_New", "chest_pain_type")]
pivot1 = ftable(heart_data30)
pivot1
heart_data30 = heart_Data[1:30, c("Target", "BP_New", "chest_pain_type")]
pivot1 = ftable(heart_data30)
prop.table(pivot1)
qhpvt(heart_data30, "Target", "BP_New", "chest_pain_type", "n()")
qhpvt(heart_data30, "Target", "BP_New", "chest_pain_type", n())
qhpvt(heart_data30, "Target", "BP_New", "chest_pain_type")
ftable(heart_data30)
heart_data30 = heart_Data[1:30, c("Target", "BP_New", "chest_pain_type")]
pivot1 = ftable(heart_data30)
#prop.table(pivot1)
P_Yes = nrow(subset(heart_data30, Target == "Yes")) / nrow(heart_data30)
View(heart_data30)
View(heart_Data)
View(heart_data30)
heart_data30 = heart_Data[1:30, c("Target", "BP_New", "chest_pain_type")]
pivot1 = ftable(heart_data30)
#prop.table(pivot1)
P_Yes = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
heart_data30 = heart_Data[1:30, c("Target", "BP_New", "chest_pain_type")]
pivot1 = ftable(heart_data30)
#prop.table(pivot1)
P_Yes = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
P_NO = nrow(subset(heart_data30, Target == "NO")) / nrow(heart_data30)
heart_data30 = heart_Data[1:30, c("Target", "BP_New", "chest_pain_type")]
pivot1 = ftable(heart_data30)
#prop.table(pivot1)
P_Yes = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
#P_NO = nrow(subset(heart_data30, Target == "NO")) / nrow(heart_data30)
P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
P_YES_1 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
P_NO_0 = nrow(subset(heart_data30, BP_New == "NO" & chest_pain_type == 0)) / nrow(heart_data30)
P_N0_1 = nrow(subset(heart_data30, BP_New == "NO" & chest_pain_type == 1)) / nrow(heart_data30)
heart_data30 = heart_Data[1:30, c("Target", "BP_New", "chest_pain_type")]
pivot1 = ftable(heart_data30)
prop.table(pivot1)
P_Yes = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
#P_NO = nrow(subset(heart_data30, Target == "NO")) / nrow(heart_data30)
P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
P_YES_1 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
P_NO_0 = nrow(subset(heart_data30, BP_New == "NO" & chest_pain_type == 0)) / nrow(heart_data30)
P_N0_1 = nrow(subset(heart_data30, BP_New == "NO" & chest_pain_type == 1)) / nrow(heart_data30)
heart_data30 = heart_Data[1:30, c("Target", "BP_New", "chest_pain_type")]
pivot1 = ftable(heart_data30)
prop.table(pivot1)
P_Yes = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
#P_NO = nrow(subset(heart_data30, Target == "NO")) / nrow(heart_data30)
P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
P_YES_1 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
P_NO_0 = nrow(subset(heart_data30, BP_New == "NO" & chest_pain_type == 0)) / nrow(heart_data30)
P_N0_1 = nrow(subset(heart_data30, BP_New == "NO" & chest_pain_type == 1)) / nrow(heart_data30)
P_YES_YES_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
heart_data30 = heart_Data[1:30, c("Target", "BP_New", "chest_pain_type")]
pivot1 = ftable(heart_data30)
prop.table(pivot1)
P_Yes = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
#P_NO = nrow(subset(heart_data30, Target == "NO")) / nrow(heart_data30)
#P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
P_YES_YES_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
P_NO_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" & chest_pain_type == 0)) / nrow(heart_data30)
P_N0_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" & chest_pain_type == 1)) / nrow(heart_data30)
P_YES_YES_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
heart_data30 = heart_Data[1:30, c("Target", "BP_New", "chest_pain_type")]
pivot1 = ftable(heart_data30)
prop.table(pivot1)
P_Yes = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
#P_NO = nrow(subset(heart_data30, Target == "NO")) / nrow(heart_data30)
#P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
P_YES_YES_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
P_YES_NO_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" & chest_pain_type == 0)) / nrow(heart_data30)
P_YES_N0_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" & chest_pain_type == 1)) / nrow(heart_data30)
P_YES_YES_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
heart_data30 = heart_Data[1:30, c("Target", "BP_New", "chest_pain_type")]
pivot1 = ftable(heart_data30)
prop.table(pivot1)
P_Yes = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
#P_NO = nrow(subset(heart_data30, Target == "NO")) / nrow(heart_data30)
#P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
#P_YES_YES_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
#P_YES_NO_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" & chest_pain_type == 0)) / nrow(heart_data30)
#P_YES_N0_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" & chest_pain_type == 1)) / nrow(heart_data30)
#P_YES_YES_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
P_YES_1 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
P_NO_0 = nrow(subset(heart_data30, BP_New == "NO" & chest_pain_type == 0)) / nrow(heart_data30)
P_NO_1 = nrow(subset(heart_data30, BP_New == "NO" & chest_pain_type == 1)) / nrow(heart_data30)
P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
heart_data30 = heart_Data[1:30, c("Target", "BP_New", "chest_pain_type")]
pivot1 = ftable(heart_data30)
pivot1
prop.table(pivot1)
P_Yes = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
#P_NO = nrow(subset(heart_data30, Target == "NO")) / nrow(heart_data30)
#P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
#P_YES_YES_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
#P_YES_NO_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" & chest_pain_type == 0)) / nrow(heart_data30)
#P_YES_N0_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" & chest_pain_type == 1)) / nrow(heart_data30)
#P_YES_YES_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
P_YES_1 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
P_NO_0 = nrow(subset(heart_data30, BP_New == "NO" & chest_pain_type == 0)) / nrow(heart_data30)
P_NO_1 = nrow(subset(heart_data30, BP_New == "NO" & chest_pain_type == 1)) / nrow(heart_data30)
P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
#P1 = pivot1[1,]
heart_data30 = heart_Data[1:30, c("Target", "BP_New", "chest_pain_type")]
pivot1 = ftable(heart_data30)
pivot1[3,1]
prop.table(pivot1)
P_Yes = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
#P_NO = nrow(subset(heart_data30, Target == "NO")) / nrow(heart_data30)
#P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
#P_YES_YES_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
#P_YES_NO_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" & chest_pain_type == 0)) / nrow(heart_data30)
#P_YES_N0_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" & chest_pain_type == 1)) / nrow(heart_data30)
#P_YES_YES_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
P_YES_1 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
P_NO_0 = nrow(subset(heart_data30, BP_New == "NO" & chest_pain_type == 0)) / nrow(heart_data30)
P_NO_1 = nrow(subset(heart_data30, BP_New == "NO" & chest_pain_type == 1)) / nrow(heart_data30)
P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
#P1 = pivot1[1,]
heart_data30 = heart_Data[1:30, c("Target", "BP_New", "chest_pain_type")]
pivot1 = ftable(heart_data30)
pivot1[3,1]
prop.table(pivot1)
P_Yes = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
#P_NO = nrow(subset(heart_data30, Target == "NO")) / nrow(heart_data30)
#P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
#P_YES_YES_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
#P_YES_NO_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" & chest_pain_type == 0)) / nrow(heart_data30)
#P_YES_N0_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" & chest_pain_type == 1)) / nrow(heart_data30)
#P_YES_YES_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
P_YES_1 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
P_NO_0 = nrow(subset(heart_data30, BP_New == "NO" & chest_pain_type == 0)) / nrow(heart_data30)
P_NO_1 = nrow(subset(heart_data30, BP_New == "NO" & chest_pain_type == 1)) / nrow(heart_data30)
P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
P1 = pivot1[3,1] / P_YES_0
heart_data30 = heart_Data[1:30, c("Target", "BP_New", "chest_pain_type")]
pivot1 = ftable(heart_data30)
pivot1[3,1]
pivot1
P_Yes = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
#P_NO = nrow(subset(heart_data30, Target == "NO")) / nrow(heart_data30)
#P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
#P_YES_YES_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
#P_YES_NO_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" & chest_pain_type == 0)) / nrow(heart_data30)
#P_YES_N0_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" & chest_pain_type == 1)) / nrow(heart_data30)
#P_YES_YES_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
P_YES_1 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
P_NO_0 = nrow(subset(heart_data30, BP_New == "NO" & chest_pain_type == 0)) / nrow(heart_data30)
P_NO_1 = nrow(subset(heart_data30, BP_New == "NO" & chest_pain_type == 1)) / nrow(heart_data30)
P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
P1 = pivot1[3,1] / P_YES_0
P2 = pivot1
pivoit1[1,1]
pivot1[1,1]
pivot1[1,2]
pivot1[1,3]
pivot1[2,1]
heart_data30 = heart_Data[1:30, c("Target", "BP_New", "chest_pain_type")]
pivot1 = ftable(heart_data30)
pivot1[3,1]
pivot1
P_Yes = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
#P_NO = nrow(subset(heart_data30, Target == "NO")) / nrow(heart_data30)
#P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
P_YES_YES_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
P_YES_NO_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" & chest_pain_type == 0)) / nrow(heart_data30)
P_YES_N0_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" & chest_pain_type == 1)) / nrow(heart_data30)
P_YES_YES_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
P_YES_1 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
P_NO_0 = nrow(subset(heart_data30, BP_New == "NO" & chest_pain_type == 0)) / nrow(heart_data30)
P_NO_1 = nrow(subset(heart_data30, BP_New == "NO" & chest_pain_type == 1)) / nrow(heart_data30)
P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
P1 = P_YES_YES_0 / P_YES_0
P2 = pivot1
heart_data30 = heart_Data[1:30, c("Target", "BP_New", "chest_pain_type")]
pivot1 = ftable(heart_data30)
pivot1[3,1]
pivot1
P_Yes = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
#P_NO = nrow(subset(heart_data30, Target == "NO")) / nrow(heart_data30)
#P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
P_YES_YES_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
P_YES_NO_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" & chest_pain_type == 0)) / nrow(heart_data30)
P_YES_N0_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" & chest_pain_type == 1)) / nrow(heart_data30)
P_YES_YES_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
P_YES_1 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
P_NO_0 = nrow(subset(heart_data30, BP_New == "NO" & chest_pain_type == 0)) / nrow(heart_data30)
P_NO_1 = nrow(subset(heart_data30, BP_New == "NO" & chest_pain_type == 1)) / nrow(heart_data30)
P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
P1 = P_YES_YES_0 / P_YES_0
P2 = P_YES_YES_1 / P_YES_1
P3 = P_YES_NO_0 / P_NO_0
P4 = P_YES_NO_1 / P_NO_1
heart_data30 = heart_Data[1:30, c("Target", "BP_New", "chest_pain_type")]
pivot1 = ftable(heart_data30)
pivot1[3,1]
pivot1
P_Yes = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
#P_NO = nrow(subset(heart_data30, Target == "NO")) / nrow(heart_data30)
#P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
P_YES_YES_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
P_YES_NO_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" & chest_pain_type == 0)) / nrow(heart_data30)
P_YES_NO_1 = nrow(subset(heart_data30, Target == "YES" & BP_New == "NO" & chest_pain_type == 1)) / nrow(heart_data30)
P_YES_YES_0 = nrow(subset(heart_data30, Target == "YES" & BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
P_YES_1 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
P_NO_0 = nrow(subset(heart_data30, BP_New == "NO" & chest_pain_type == 0)) / nrow(heart_data30)
P_NO_1 = nrow(subset(heart_data30, BP_New == "NO" & chest_pain_type == 1)) / nrow(heart_data30)
P_YES_0 = nrow(subset(heart_data30, BP_New == "YES" & chest_pain_type == 0)) / nrow(heart_data30)
P1 = P_YES_YES_0 / P_YES_0
P2 = P_YES_YES_1 / P_YES_1
P3 = P_YES_NO_0 / P_NO_0
P4 = P_YES_NO_1 / P_NO_1
pivot1[,1]
0/1
0/2
0/0
table(heart_data30$BP_New, heart_data30$chest_pain_type)
Probability_Target = rep(0,30)
#for (i in 1:30) {…}
#Heart_disease30$Probability_Target <- Probability_Target Heart_disease30$Pred_Probability <- ifelse(Heart_disease30$Probability_Target > 0.5, "Yes", "No")
Probability_Target = rep(0,30)
for (i in 1:30){
if (heart_data30[i]$BP_New == "YES" & heart_data30[i]$chest_pain_type == 1){
Probability_Target[i] = P2
} else if (heart_data30$BP_New == "NO" & heart_data30$chest_pain_type == 1){
Probability_Target[i] = P4
} else {
Probability_Target[i] = 0
}
}
Probability_Target = rep(0,30)
for (i in 1:30){
if (heart_data30$BP_New[i] == "YES" & heart_data30$chest_pain_type[i] == 1){
Probability_Target[i] = P2
} else if (heart_data30$BP_New[i] == "NO" & heart_data30$chest_pain_type[i] == 1){
Probability_Target[i] = P4
} else {
Probability_Target[i] = 0
}
}
#Heart_disease30$Probability_Target <- Probability_Target Heart_disease30$Pred_Probability <- ifelse(Heart_disease30$Probability_Target > 0.5, "Yes", "No")
Probability_Target = rep(0,30)
for (i in 1:30){
if (heart_data30$BP_New[i] == "YES" & heart_data30$chest_pain_type[i] == 1){
Probability_Target[i] = P2
} else if (heart_data30$BP_New[i] == "NO" & heart_data30$chest_pain_type[i] == 1){
Probability_Target[i] = P4
} else {
Probability_Target[i] = 0
}
}
Heart_data30$Probability_Target = Probability_Target
Probability_Target = rep(0,30)
for (i in 1:30){
if (heart_data30$BP_New[i] == "YES" & heart_data30$chest_pain_type[i] == 1){
Probability_Target[i] = P2
} else if (heart_data30$BP_New[i] == "NO" & heart_data30$chest_pain_type[i] == 1){
Probability_Target[i] = P4
} else {
Probability_Target[i] = 0
}
}
heart_data30$Probability_Target = Probability_Target
heart_data30$Pred_Probability = ifelse(Heart_disease30$Probability_Target > 0.5, "Yes", "No")
Probability_Target = rep(0,30)
for (i in 1:30){
if (heart_data30$BP_New[i] == "YES" & heart_data30$chest_pain_type[i] == 1){
Probability_Target[i] = P2
} else if (heart_data30$BP_New[i] == "NO" & heart_data30$chest_pain_type[i] == 1){
Probability_Target[i] = P4
} else {
Probability_Target[i] = 0
}
}
heart_data30$Probability_Target = Probability_Target
heart_data30$Pred_Probability = ifelse(heart_data30$Probability_Target > 0.5, "Yes", "No")
View(heart_data30)
P_Yes = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
naive = (P_YES_YES_1 * P_YES) / P_YES_1
P_YES = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
naive = (P_YES_YES_1 * P_YES) / P_YES_1
naive
P_YES = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
P_NO = nrow(subset(heart_data30, Target == "NO")) / nrow(heart_data30)
naive = (P_YES_YES_1 * P_YES) / P_YES_1
naive
naive2 = (14/16)* P_NO / P_YES_1
P_YES = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
P_NO = nrow(subset(heart_data30, Target == "NO")) / nrow(heart_data30)
naive = (P_YES_YES_1 * P_YES) / P_YES_1
naive
P_NO_YES_1 = nrow(subset(heart_data30, Target == "NO" & BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
naive2 = (P_NO_YES_1 * P_NO) / P_YES_1
P_YES = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
P_NO = nrow(subset(heart_data30, Target == "NO")) / nrow(heart_data30)
naive = (P_YES_YES_1 * P_YES) / P_YES_1
naive
P_NO_YES_1 = nrow(subset(heart_data30, Target == "NO" & BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
naive2 = (P_NO_YES_1 * P_YES) / P_YES_1
P_YES = nrow(subset(heart_data30, Target == "YES")) / nrow(heart_data30)
P_NO = nrow(subset(heart_data30, Target == "NO")) / nrow(heart_data30)
naive = (P_YES_YES_1 * P_YES) / P_YES_1
naive
P_NO_YES_1 = nrow(subset(heart_data30, Target == "NO" & BP_New == "YES" & chest_pain_type == 1)) / nrow(heart_data30)
naive2 = (P_NO_YES_1 * P_NO) / P_YES_1
View(heart_Data)
#Partitioned the data
train_index = createDataPartition(heart_Data$Target, p = 0.6, list = FALSE)
#Training
trainDF = heart_Data[train_index,]
#Validation
validationDF = heart_Data[-train_index,]
trainDFnorm = trainDF[-10]
View(trainDF)
View(trainDFnorm)
set.seed(123)
View(heart_Data)
?confusionMatrix
#Partitioned the data
train_index = createDataPartition(heart_Data$Target, p = 0.6, list = FALSE)
#Training
trainDF = heart_Data[train_index,]
#Validation
validationDF = heart_Data[-train_index,]
#trainDFnorm = trainDF[-10]
nb_model = naiveBayes(Target ~ BP_New + chest_pain_type, data = trainDF)
#Partitioned the data
train_index = createDataPartition(heart_Data$Target, p = 0.6, list = FALSE)
#Training
trainDF = heart_Data[train_index,]
#Validation
validationDF = heart_Data[-train_index,]
#trainDFnorm = trainDF[-10]
nb_model = naivebayes(Target ~ BP_New + chest_pain_type, data = trainDF)
#Partitioned the data
train_index = createDataPartition(heart_Data$Target, p = 0.6, list = FALSE)
#Training
trainDF = heart_Data[train_index,]
#Validation
validationDF = heart_Data[-train_index,]
#trainDFnorm = trainDF[-10]
nb_model = naive_bayes(Target ~ BP_New + chest_pain_type, data = trainDF)
train_pred = predict(nb_model, validationDF)
conf_matrix1 = confusionMatrix(train_pred)
#Partitioned the data
train_index = createDataPartition(heart_Data$Target, p = 0.6, list = FALSE)
#Training
trainDF = heart_Data[train_index,]
#Validation
validationDF = heart_Data[-train_index,]
#trainDFnorm = trainDF[-10]
nb_model = naive_bayes(Target ~ BP_New + chest_pain_type, data = trainDF)
train_pred = predict(nb_model, validationDF)
conf_matrix1 = confusionMatrix(train_pred, validationDF)
#Partitioned the data
train_index = createDataPartition(heart_Data$Target, p = 0.6, list = FALSE)
#Training
trainDF = heart_Data[train_index,]
#Validation
validationDF = heart_Data[-train_index,]
#trainDFnorm = trainDF[-10]
nb_model = naive_bayes(Target ~ BP_New + chest_pain_type, data = trainDF)
train_pred = predict(nb_model, validationDF)
conf_matrix1 = confusionMatrix(train_pred, validationDF$Target)
View(validationDF)
str(validationDF)
#Partitioned the data
train_index = createDataPartition(heart_Data$Target, p = 0.6, list = FALSE)
#Training
trainDF = heart_Data[train_index,]
#Validation
validationDF = heart_Data[-train_index,]
#trainDFnorm = trainDF[-10]
nb_model = naive_bayes(Target ~ BP_New + chest_pain_type, data = trainDF)
train_pred = predict(nb_model, validationDF)
validationDF$Target = as.factor(validationDF$Target)
conf_matrix1 = confusionMatrix(train_pred, validationDF$Target)
#Partitioned the data
train_index = createDataPartition(heart_Data$Target, p = 0.6, list = FALSE)
#Training
trainDF = heart_Data[train_index,]
#Validation
validationDF = heart_Data[-train_index,]
#trainDFnorm = trainDF[-10]
nb_model = naive_bayes(Target ~ BP_New + chest_pain_type, data = trainDF)
train_pred = predict(nb_model, validationDF)
validationDF$Target = as.factor(validationDF$Target)
conf_matrix1 = confusionMatrix(train_pred, validationDF$Target)
conf_matrix1
install.packages(gmodels)
install.packages("gmodels")
#Partitioned the data
train_index = createDataPartition(heart_Data$Target, p = 0.6, list = FALSE)
#Training
trainDF = heart_Data[train_index,]
#Validation
validationDF = heart_Data[-train_index,]
#trainDFnorm = trainDF[-10]
nb_model = naive_bayes(Target ~ BP_New + chest_pain_type, data = trainDF)
train_pred = predict(nb_model, validationDF)
validationDF$Target = as.factor(validationDF$Target)
conf_matrix1 = confusionMatrix(train_pred, validationDF$Target)
conf_matrix1
library(gmodels)
CrossTable(x=validationDF$default,y=Predicted_Test_labels, prop.chisq = FALSE)
#Partitioned the data
train_index = createDataPartition(heart_Data$Target, p = 0.6, list = FALSE)
#Training
trainDF = heart_Data[train_index,]
#Validation
validationDF = heart_Data[-train_index,]
#trainDFnorm = trainDF[-10]
nb_model = naive_bayes(Target ~ BP_New + chest_pain_type, data = trainDF)
train_pred = predict(nb_model, validationDF)
validationDF$Target = as.factor(validationDF$Target)
conf_matrix1 = confusionMatrix(train_pred, validationDF$Target)
conf_matrix1
library(gmodels)
CrossTable(x=validationDF$default,y=train_pred, prop.chisq = FALSE)
#Partitioned the data
train_index = createDataPartition(heart_Data$Target, p = 0.6, list = FALSE)
#Training
trainDF = heart_Data[train_index,]
#Validation
validationDF = heart_Data[-train_index,]
#trainDFnorm = trainDF[-10]
nb_model = naive_bayes(Target ~ BP_New + chest_pain_type, data = trainDF)
train_pred = predict(nb_model, validationDF)
validationDF$Target = as.factor(validationDF$Target)
conf_matrix1 = confusionMatrix(train_pred, validationDF$Target)
conf_matrix1
library(gmodels)
CrossTable(x=validationDF$Target, y=train_pred, prop.chisq = FALSE)
predict(nb_model, validationDF, type = "prob")
